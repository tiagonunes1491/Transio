# templates/networkpolicies.yaml
{{- if .Values.networkPolicies.create }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "secret-sharer-app.fullname" . }}-default-deny-all
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "secret-sharer-app.labels" . | nindent 4 }}
spec:
  # Apply this policy to all pods in the namespace
  # by selecting no specific pods (empty podSelector).
  podSelector: {} # An empty podSelector selects all pods in the namespace
  policyTypes:
    - Ingress # Apply to incoming traffic
    - Egress  # Apply to outgoing traffic
  # No ingress rules defined means all ingress traffic is denied by default.
  # No egress rules defined means all egress traffic is denied by default.
  # ingress: [] # Explicitly showing empty, usually omitted for default deny
  # egress: []  # Explicitly showing empty, usually omitted for default deny
{{- end }}
---
# Allow Ingress traffic to Frontend pods (e.g., from an Ingress Controller)
{{- if .Values.networkPolicies.create }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "secret-sharer-app.fullname" . }}-allow-ingress-to-frontend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "secret-sharer-app.labels" . | nindent 4 }}
spec:
  # This policy applies to Frontend pods
  podSelector:
    matchLabels:
      {{- include "secret-sharer-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend 
  policyTypes:
    - Ingress # This policy is about allowing INCOMING traffic to the frontend
  ingress:
    - from:
        - ipBlock:
            cidr: "10.0.2.0/24" 
      ports:
        # Allow traffic TO this port on the Frontend pods
        - protocol: TCP
          port: {{ .Values.frontend.service.port }} # Port the frontend (Nginx) listens on (e.g., 80)
{{- end }}
---
# Allow Ingress traffic (orchestrated by AGIC) to Backend pods
{{- if .Values.networkPolicies.create }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "secret-sharer-app.fullname" . }}-allow-agic-to-backend
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "secret-sharer-app.labels" . | nindent 4 }}
spec:
  # This policy applies to Backend pods
  podSelector:
    matchLabels:
      {{- include "secret-sharer-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend # Selects the backend pods
  policyTypes:
    - Ingress # This policy is about allowing INCOMING traffic to the backend
  ingress:
    - from:
        - ipBlock:
            cidr: "10.0.2.0/24" 
      ports:
        # Allow traffic TO this port on the Backend pods
        - protocol: TCP
          port: {{ .Values.backend.service.port }} # Port the backend service/container listens on (e.g., 5000)
{{- end }}
---
# Allow cluster DNS egress (UDP/TCP port 53) to kube-dns in kube-system namespace
{{- if .Values.networkPolicies.create }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "secret-sharer-app.fullname" . }}-allow-dns
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "secret-sharer-app.labels" . | nindent 4 }}
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
{{- end }}
---
# Allow Backend pods to connect to external Cosmos DB (egress rule)
{{- if .Values.networkPolicies.create }}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ include "secret-sharer-app.fullname" . }}-allow-backend-egress-to-cosmosdb
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "secret-sharer-app.labels" . | nindent 4 }}
spec:
  # This policy applies to Backend pods
  podSelector:
    matchLabels:
      {{- include "secret-sharer-app.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend # Selects the backend pods
  policyTypes:
    - Egress # This policy is about allowing OUTGOING traffic from the backend
  egress:
    - {} # Allow all external egress for Cosmos DB and Azure services (can be restricted to specific IP ranges if needed)
{{- end }}
