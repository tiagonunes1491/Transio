name: "CI - Backend PR Validation"
on: 
  pull_request:
    branches:
      - 'development'
    paths:
      - 'backend/**'
jobs:
  check_changes:
    name: 'Check for file changes'
    runs-on: ubuntu-latest
    outputs:
      sca_required: ${{ steps.changed-file-requirements.outputs.any_changed }}
      lint_required: ${{ steps.changed-files-backend.outputs.all_changed_files }}
      trivy_required: ${{ steps.changed-file-docker.outputs.any_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for changed-files to work properly
      
      - uses: tj-actions/changed-files@v44 # Use a specific version for stability
        id: changed-file-requirements
        with:
          # We tell the action to ONLY look for changes in this specific file.
          files: backend/requirements.txt
      
      - uses: tj-actions/changed-files@v44
        id: changed-files-backend
        with:
          # Get all changed Python files in backend directory
          files: |
            backend/**/*.py
          # Output the files as a comma-separated list
          separator: ','

      - uses: tj-actions/changed-files@v44
        id: changed-file-docker
        with:
          # Get all changed Python files in backend directory
          files: |
            backend/Dockerfile

  format_and_lint:
    needs: check_changes
    name: 'Format and Lint Check'
    if: needs.check_changes.outputs.lint_required != ''
    uses: ./.github/workflows/reusable-python-check.yml
    with:
      paths: ${{ needs.check_changes.outputs.lint_required }}

  static_analysis:
    needs: check_changes
    name: 'Static Analysis (SAST Scan)'
    if: needs.check_changes.outputs.lint_required != ''
    uses: ./.github/workflows/reusable-sast-scan.yml
    with:
      language: 'python'

  sca_analysis:
    needs: check_changes
    name: 'Software Composition Analysis (SCA Scan)'
    if: needs.check_changes.outputs.sca_required != ''
    uses: ./.github/workflows/reusable-sca-scan.yml
    with:
      paths: 'backend/requirements.txt'
    
  backend_tests:
    needs: check_changes
    name: 'Backend Unit Tests & Coverage'
    if: needs.check_changes.outputs.lint_required != ''
    uses: ./.github/workflows/reusable-backend-test.yml
    with:
      python-version: '3.11'
      coverage-threshold: 90
      upload-coverage: true

  # If any changes that require a new build are detected, run the container build and analysis job
  container_analysis:
    needs: check_changes
    name: 'Container Analyis (Dockerfile Scan, Container Scan, Container build)'
    if: needs.check_changes.outputs.sca_required != '' || needs.check_changes.outputs.lint_required != '' || needs.check_changes.outputs.trivy_required != ''  
    uses: ./.github/workflows/reusable-container-scan.yml
    with:
      path: 'backend/Dockerfile'
      container-name: 'backend-app'
      build-context: 'backend'


  check_results:
    name: Check Analysis Results
    if: always() # This job must always run to check the outcomes
    needs:
      - format_and_lint
      - static_analysis
      - sca_analysis
      - backend_tests
      - container_analysis
    runs-on: ubuntu-latest
    steps:
      - name: Verify that all required checks passed
        run: |
          # This script checks the result of each job this one needs.
          # It fails if any of them have failed. 'success' and 'skipped' are considered passing states.
          # You can add or remove jobs from this list as needed.
          results="${{ needs.format_and_lint.result }} ${{ needs.static_analysis.result }} ${{ needs.sca_analysis.result }} ${{ needs.backend_tests.result }} ${{ needs.container_analysis.result }}"
          echo "Job results: $results"
          if [[ "${results,,}" =~ "failure" || "${results,,}" =~ "cancelled" ]]; then
            echo "One or more required checks failed. Halting the pipeline."
            exit 1
          else
            echo "All required checks passed or were skipped. Proceeding."
          fi