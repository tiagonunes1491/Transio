# .github/workflows/ci-publish-bicep.yml
name: 'CI - Publish Bicep Artifacts'

on:
  push:
    branches:
      - development # ONLY triggers on the development branch
    paths:
      - 'infra/**.bicep'
      - 'infra/**/*.bicep'

permissions:
  id-token: write
  contents: write

concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  publish-bicep-artifacts:
    name: 'Publish Changed Bicep Artifacts'
    runs-on: ubuntu-latest
    environment: shared
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Find changed Bicep files'
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            infra/**/*.bicep

      - name: 'Setup Azure CLI'
        if: steps.changed-files.outputs.any_changed == 'true'
        run: az bicep install

      - name: Log in to Azure
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENTID_ART_PUSH }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Publish and Version Bump'
        id: publish
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          ACR_NAME: ${{ vars.ACR_NAME }} 
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          sudo apt-get install -y jq
          
          # Convert space-separated files to array and process each file
          for file in $CHANGED_FILES; do
            echo "Processing file: $file"
            base_path=$(echo "$file" | sed 's|^infra/||');
            
            if [[ "$base_path" == */* ]]; then 
              artifact_name=$(echo "$base_path" | sed 's|.bicep$||'); 
            else 
              artifact_name=$(basename "$base_path" .bicep); 
            fi;
            
            if [[ "$base_path" == */* ]]; then 
              publish_path="modules/$artifact_name"; 
            else 
              publish_path="templates/$artifact_name"; 
            fi;
            
            echo "Artifact name: $artifact_name"
            echo "Publish path: $publish_path"
            
            current_version=$(jq -r ".[\"$artifact_name\"] // \"1.0.0\"" infra/versions.json)
            echo "Current version: $current_version"
            
            # Always bump the patch version for a stable release
            new_version=$(echo $current_version | awk -F. -v OFS=. '{$NF++;print}')
            echo "Bumping stable version for $artifact_name to $new_version"
            
            # Publish the new stable artifact
            az bicep publish --file "$file" --target "br:$ACR_NAME.azurecr.io/$publish_path:$new_version"
            
            # Update the versions.json file in memory
            jq ".[\"$artifact_name\"] = \"$new_version\"" infra/versions.json > tmp.$$.json && mv tmp.$$.json infra/versions.json
          done

      - name: 'Commit Version Changes'
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add infra/versions.json
          if git diff --staged --quiet; then
            echo "No version changes to commit."
          else
            git commit -m "chore: Bump artifact versions [skip ci]"
            git push
          fi