name: CI - Helm PR Review

on:
  pull_request:
    paths:
      - 'deploy/helm/**'

jobs:
  # Job 1: Setup and render charts (shared dependency)
  setup:
    name: Setup and render charts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Render charts
        run: |
          mkdir -p rendered
          helm template ts-app deploy/helm \
            --output-dir rendered \
            --set acrLoginServer=${{ vars.ACR_NAME }}.azurecr.io

      - name: Upload rendered charts
        uses: actions/upload-artifact@v4
        with:
          name: rendered-charts
          path: rendered/

  # Job 2: Secret scanning (independent)
  secret-scan:
    name: Secret scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gitleaks (PR diff scan)
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 3: Helm linting (independent)
  helm-lint:
    name: Helm linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Run helm lint
        run: helm lint deploy/helm

  # Job 4: Kubernetes schema validation
  kubeconform:
    name: Kubernetes schema validation
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download rendered charts
        uses: actions/download-artifact@v4
        with:
          name: rendered-charts
          path: rendered/

      - name: Install kubeconform
        run: |
          wget https://github.com/yannh/kubeconform/releases/download/v0.6.4/kubeconform-linux-amd64.tar.gz
          tar xf kubeconform-linux-amd64.tar.gz
          sudo mv kubeconform /usr/local/bin
          kubeconform -v

      - name: Validate manifests with kubeconform
        run: |
          find rendered -name "*.yaml" -type f | xargs kubeconform -ignore-missing-schemas -summary -verbose

  # Job 5: Security policy validation
  checkov:
    name: Security policy validation
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Download rendered charts
        uses: actions/download-artifact@v4
        with:
          name: rendered-charts
          path: rendered/      
      - name: K8s IaC security policies (Checkov)
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: rendered
          framework: kubernetes
          quiet: true
          compact: true
          output_format: sarif
          output_file_path: checkov-results.sarif
        env:
          CHECKOV_COMPACT: true
          CHECKOV_QUIET: true

      - name: Upload Checkov scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: checkov-results.sarif
          category: 'checkov-kubernetes-security'

  # Job 6: Comprehensive feedback
  post-comment:
    name: 'Post Validation Results Comment'
    needs: [setup, secret-scan, helm-lint, kubeconform, checkov]
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: 'Post Success Comment'
        if: |
          needs.setup.result == 'success' &&
          needs.secret-scan.result == 'success' &&
          needs.helm-lint.result == 'success' &&
          needs.kubeconform.result == 'success' &&
          needs.checkov.result == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ **Helm Chart Validation Successful**

            All Helm chart validation checks passed successfully! 🎉

            **Validation Results:**
            - 🔍 Secret Scanning: ✅ Passed
            - 📝 Helm Linting: ✅ Passed
            - 📝 Kubeconform: ✅ Passed
            - 🔒 Checkov: ✅ Passed

            **What was validated:**
            - 🔍 Secret scanning in PR diff (Gitleaks)
            - 📝 Helm chart syntax and best practices
            - 📝 Kubernetes manifest schema validation (kubeconform)
            - 🔒 Kubernetes security policies (Checkov)

            Great work! Your Helm chart looks good and secure.
          edit-mode: replace

      - name: 'Post Failure Comment'
        if: |
          needs.setup.result != 'success' ||
          needs.secret-scan.result != 'success' ||
          needs.helm-lint.result != 'success' ||
          needs.kubeconform.result != 'success' ||
          needs.checkov.result != 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ❌ **Helm Chart Validation Failed**

            One or more Helm chart validation checks failed.
            Please review the [Checks tab](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.

            **Validation Results:**
            - 🔍 Secret Scanning: ${{ needs.secret-scan.result == 'success' && '✅ Passed' || '❌ Failed' }}
            - 📝 Helm Linting: ${{ needs.helm-lint.result == 'success' && '✅ Passed' || '❌ Failed' }}
            - 📝 Kubeconform: ${{ needs.kubeconform.result == 'success' && '✅ Passed' || '❌ Failed' }}
            - 🔒 Checkov: ${{ needs.checkov.result == 'success' && '✅ Passed' || '❌ Failed' }}

            **What was checked:**
            - 🔍 Secret scanning in PR diff (Gitleaks)
            - 📝 Helm chart syntax and best practices
            - 📝 Kubernetes manifest schema validation (kubeconform)
            - 🔒 Kubernetes security policies (Checkov)

            Please fix the issues and push your changes.
          edit-mode: replace
