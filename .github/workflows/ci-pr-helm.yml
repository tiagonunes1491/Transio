name: CI - Helm PR Review

on:
  pull_request:
    paths:
      - 'k8s/secret-sharer-app/**'

jobs:
  pr-validation:
    name: Static validation
    runs-on: ubuntu-latest
    outputs:
      images_json: ${{ steps.image_extractor.outputs.images_json }}
      kubeconform_result: ${{ steps.kubeconform.outcome }}
      checkov_result: ${{ steps.checkov.outcome }}

    steps:
      # 0. Checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 1. Secret scans (Gitleaks)
      - name: Gitleaks (PR diff scan)
        uses: gitleaks/gitleaks-action@v2
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 2. Helm + chart-testing
      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Run helm lint
        run: helm lint k8s/secret-sharer-app

      # 3. Render only changed charts
      - name: Render changed charts
        run: |
          mkdir -p rendered
          helm template secret-sharer-app k8s/secret-sharer-app \
            --output-dir rendered \
            --set acrLoginServer=${{ vars.ACR_NAME }}.azurecr.io

      # 4. List rendered files for debugging
      - name: List rendered files
        run: |
          echo "Contents of rendered directory:"
          find rendered -name "*.yaml" -type f
          echo "Total YAML files found: $(find rendered -name "*.yaml" -type f | wc -l)"

      # 5. Install and run kubeconform directly (avoiding Docker path issues)
      - name: Install kubeconform
        run: |
          wget https://github.com/yannh/kubeconform/releases/download/v0.6.4/kubeconform-linux-amd64.tar.gz
          tar xf kubeconform-linux-amd64.tar.gz
          sudo mv kubeconform /usr/local/bin
          kubeconform -v

      - name: Validate manifests with kubeconform
        id: kubeconform
        run: |
          # Run kubeconform on all rendered YAML files
          find rendered -name "*.yaml" -type f | xargs kubeconform -ignore-missing-schemas -summary -verbose
        continue-on-error: true

      # 6. K8s IaC security policies (Checkov)
      - name: K8s IaC security policies (Checkov)
        id: checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: rendered
          framework: kubernetes
          quiet: true
          compact: true
          soft_fail: true
        continue-on-error: true
        env:
          # Prevent Checkov from setting environment variables
          CHECKOV_COMPACT: true
          CHECKOV_QUIET: true

      # 7. Extract public images
      - name: Install jq
        run: sudo apt-get -y install jq
      
      - name: Extract public images
        id: image_extractor
        run: |
          shopt -s globstar
          ACR_DOMAIN="secureSharerACR.azurecr.io"
          IMAGES_TEXT=$(grep -rhoP 'image:\s*\K\S+' rendered/**/*.yaml | sort -u | grep -v "$ACR_DOMAIN" || true)
          # Remove any surrounding quotes from each image
          IMAGES_TEXT=$(echo "$IMAGES_TEXT" | sed 's/^"//;s/"$//')
          if [[ -z "$IMAGES_TEXT" ]]; then
              echo "No public images found to scan."
              echo "images_json=[]" >> $GITHUB_OUTPUT
              exit 0
          fi
          echo "Found public images:"
          echo "$IMAGES_TEXT"
          IMAGES_JSON=$(printf '%s\n' $IMAGES_TEXT | jq -R -s 'split("\n")[:-1]' | jq -c .)
          echo "images_json=$IMAGES_JSON" >> $GITHUB_OUTPUT
          echo "Public images JSON: $IMAGES_JSON"

      # 8. Check validation results
      - name: Check validation results
        if: always()
        run: |
          echo "Kubeconform result: ${{ steps.kubeconform.outcome }}"
          echo "Checkov result: ${{ steps.checkov.outcome }}"
          
          # Fail if either kubeconform or checkov failed
          if [[ "${{ steps.kubeconform.outcome }}" == "failure" || "${{ steps.checkov.outcome }}" == "failure" ]]; then
            echo "One or more validation steps failed"
            exit 1
          fi
        
  scan-images:
    name: Scan public images
    # This job runs after static validation
    # Will be replaced by hosting external images in ACR in the future
    needs: pr-validation
    # But is skipped if no images were found
    if: needs.pr-validation.outputs.images_json != '[]'
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.pr-validation.outputs.images_json) }}
    
    steps:
      - name: Run Trivy vulnerability scanner on ${{ matrix.image }}
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: 'image'
          image-ref: ${{ matrix.image }}
          ignore-unfixed: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'trivy-${{ matrix.image }}'

  post-comment:
    name: 'Post Validation Results Comment'
    needs: [pr-validation, scan-images]
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: 'Post Success Comment'
        if: |
          needs.pr-validation.result == 'success' &&
          (needs.scan-images.result == 'success' || needs.scan-images.result == 'skipped')
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ✅ **Helm Chart Validation Successful**

            All Helm chart validation checks passed successfully! 🎉

            **Validation Results:**
            - 📝 Kubeconform: ${{ needs.pr-validation.outputs.kubeconform_result == 'success' && '✅ Passed' || '❌ Failed' }}
            - 🔒 Checkov: ${{ needs.pr-validation.outputs.checkov_result == 'success' && '✅ Passed' || '❌ Failed' }}
            - 🖼️ Image Scanning: ${{ (needs.scan-images.result == 'success' && '✅ Passed') || (needs.scan-images.result == 'skipped' && '⏭️ Skipped (no public images)') || '❌ Failed' }}

            **What was validated:**
            - 📝 Kubernetes manifest schema validation (kubeconform)
            - 🔒 Kubernetes security policies (Checkov)
            - 🖼️ Container image vulnerability scanning (Trivy)

            Great work! Your Helm chart looks good and secure.
          edit-mode: replace

      - name: 'Post Failure Comment'
        if: |
          needs.pr-validation.result != 'success' ||
          (needs.scan-images.result != 'success' && needs.scan-images.result != 'skipped')
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ❌ **Helm Chart Validation Failed**

            One or more Helm chart validation checks failed.
            Please review the [Checks tab](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.

            **Validation Results:**
            - 📝 Kubeconform: ${{ needs.pr-validation.outputs.kubeconform_result == 'success' && '✅ Passed' || '❌ Failed' }}
            - 🔒 Checkov: ${{ needs.pr-validation.outputs.checkov_result == 'success' && '✅ Passed' || '❌ Failed' }}
            - 🖼️ Image Scanning: ${{ (needs.scan-images.result == 'success' && '✅ Passed') || (needs.scan-images.result == 'skipped' && '⏭️ Skipped (no public images)') || '❌ Failed' }}

            **What was checked:**
            - 📝 Kubernetes manifest schema validation (kubeconform)
            - 🔒 Kubernetes security policies (Checkov)
            - 🖼️ Container image vulnerability scanning (Trivy)

            Please fix the issues and push your changes.
          edit-mode: replace

      - name: 'Post No Changes Comment'
        if: needs.pr-validation.result == 'skipped'
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ℹ️ **No Helm Chart Changes Detected**

            No Helm chart files were changed in this PR - validation skipped.

            If you expected Helm chart validation to run, check that changes are in the `k8s/secret-sharer-app/` directory.
          edit-mode: replace