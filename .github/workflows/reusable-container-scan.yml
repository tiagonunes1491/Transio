name: 'Reusable - Container Scan with Trivy'
on:
    workflow_call:
        inputs:
            path:
                required: true
                description: 'Path to the Dockerfile or directory containing the Dockerfile'
                type: string
            container-name:
                required: true
                description: 'Name of the container to build'
                type: string
            build-context:
                required: false
                description: 'Build context for the Docker build (default is current directory)'
                type: string
                default: '.'
jobs:
  config_analysis:
    name: 'Dockerfile Config Scan'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy config scanner for Dockerfile
        uses: aquasecurity/trivy-action@0.31.0
        with:
          scan-type: 'config'
          scan-ref: ${{ inputs.path }}
          ignore-unfixed: false
          format: 'sarif'
          output: 'trivy-dockerfile-results.sarif'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-dockerfile-results.sarif'
          category: 'dockerfile-config-scan' # Category for container image issues

        
  build_and_scan:
    name: 'Container Build and Scan'
    needs: config_analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Build Docker image
        run: |
          docker build -f ${{ inputs.path }} -t ${{ inputs.container-name }}:${{ github.sha }} ${{ inputs.build-context }}

      - name: Run Trivy container scanner
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ inputs.container-name }}:${{ github.sha }}
          format: 'sarif'
          output: 'trivy-container-results.sarif'
          severity: 'HIGH,CRITICAL'
          exit-code: '1' # Fail the job if vulnerabilities are found

      - name: Upload container scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()  # Upload results even if scan failed
        with:
          sarif_file: 'trivy-container-results.sarif'
          category: 'container-image-scan' # Category for container image issues