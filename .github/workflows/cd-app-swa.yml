name: Deploy to Azure Static Web App

on:
  push:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - prod

permissions:
  contents: read
  id-token: write

jobs:
  determine-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
    steps:
      - id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: determine-environment
    runs-on: ubuntu-latest
    environment: ${{ needs.determine-environment.outputs.environment }}-swa
    env:
      ENVIRONMENT: ${{ needs.determine-environment.outputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Azure via OIDC
        uses: azure/login@v2
        with:
          client-id:       ${{ secrets.CLIENTID_ARTIFACT_PUSH }}
          tenant-id:       ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy via SWA CLI
        run: |
          echo "ðŸš€ Deploying [${{ env.ENVIRONMENT }}] to ${{ vars.SWA_NAME }} in RG ${{ vars.RG_NAME }}"
          swa deploy \
            --app-location "./src/frontend/static" \
            --resource-group "${{ vars.RG_NAME }}" \
            --app-name "${{ vars.SWA_NAME }}" \
            --env "${{ env.ENVIRONMENT }}" \
            --verbose