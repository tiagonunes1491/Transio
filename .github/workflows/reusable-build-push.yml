# .github/workflows/reusable-build-push.yml

name: 'Reusable - Build and Push to ACR'

on:
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
      dockerfile-path:
        required: true
        type: string
        description: 'Path to the Dockerfile'
      image-name:
        required: true
        type: string
        description: 'Name for the container image (e.g., backend-app)'
      build-context:
        required: true
        type: string
        description: 'Build context for the Docker build (e.g., ./backend)'
    secrets:
      CLIENTID:
        required: true
      TENANTID: 
        required: true
      SUBSCRIPTIONID:
        required: true


jobs:
  build-and-push:
    name: Build and Push Image
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENTID }}
          tenant-id: ${{ secrets.TENANTID }}
          subscription-id: ${{ secrets.SUBSCRIPTIONID }}
          
      - name: Get ACR access token
        id: acr_token
        run: |
          ACR_TOKEN=$(az acr login --name ${{ vars.ACR-NAME }} --expose-token --output tsv --query accessToken)
          echo "token=${ACR_TOKEN}" >> $GITHUB_OUTPUT

      - name: Log in to Docker with new token
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR-NAME }}.azurecr.io
          username: 00000000-0000-0000-0000-000000000000
          password: ${{ steps.acr_token.outputs.token }}
      
      - name: Build, tag, and push image to ACR
        run: |
          # Set the full image name variable
          IMAGE_NAME="${{ vars.ACR-NAME }}.azurecr.io/${{ inputs.image-name }}"

          # Build the image and tag it with the unique commit SHA for traceability
          docker build -f ${{ inputs.dockerfile-path }} -t $IMAGE_NAME:${{ github.sha }} ${{ inputs.build-context }}
          
          # Also tag the same image as 'latest' for easy reference
          docker tag $IMAGE_NAME:${{ github.sha }} $IMAGE_NAME:latest
          
          # Push both tags (:latest and :<commit-sha>) to the registry
          docker push --all-tags $IMAGE_NAME