{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "14651763198482587157"
    }
  },
  "parameters": {
    "resourceLocation": {
      "type": "string",
      "defaultValue": "spaincentral",
      "metadata": {
        "description": "Location for the resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "shared",
      "allowedValues": [
        "dev",
        "staging",
        "prod",
        "shared"
      ],
      "metadata": {
        "description": "Environment for deployment"
      }
    },
    "projectCode": {
      "type": "string",
      "defaultValue": "ss",
      "metadata": {
        "description": "Project code"
      }
    },
    "serviceCode": {
      "type": "string",
      "defaultValue": "plat",
      "metadata": {
        "description": "Service code for shared platform"
      }
    },
    "costCenter": {
      "type": "string",
      "defaultValue": "1000",
      "metadata": {
        "description": "Cost center for billing"
      }
    },
    "createdBy": {
      "type": "string",
      "defaultValue": "bicep-deployment",
      "metadata": {
        "description": "Created by information"
      }
    },
    "owner": {
      "type": "string",
      "defaultValue": "tiago-nunes",
      "metadata": {
        "description": "Owner"
      }
    },
    "ownerEmail": {
      "type": "string",
      "defaultValue": "tiago.nunes@example.com",
      "metadata": {
        "description": "Owner email"
      }
    },
    "createdDate": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy-MM-dd')]",
      "metadata": {
        "description": "Creation date for tagging"
      }
    },
    "acrSku": {
      "type": "string",
      "defaultValue": "Premium",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "SKU for the ACR"
      }
    },
    "acrEnableAdminUser": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable admin user for the ACR"
      }
    },
    "cosmosDatabaseNames": {
      "type": "array",
      "defaultValue": [
        "swa-dev",
        "swa-prod",
        "k8s-dev",
        "k8s-prod"
      ],
      "metadata": {
        "description": "The names of the databases to create"
      }
    },
    "cosmosContainerName": {
      "type": "string",
      "defaultValue": "secret",
      "metadata": {
        "description": "The name of the container to create in each database"
      }
    },
    "cosmosEnableFreeTier": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable free tier for Cosmos DB (not supported on internal subscriptions)"
      }
    },
    "cosmosThroughput": {
      "type": "int",
      "defaultValue": 1000,
      "metadata": {
        "description": "Throughput for the container (minimum 1000 RU/s for autoscale)"
      }
    }
  },
  "variables": {
    "envMapping": {
      "dev": "d",
      "staging": "s",
      "prod": "p",
      "shared": "sh"
    },
    "standardTags": {
      "environment": "[parameters('environment')]",
      "project": "[parameters('projectCode')]",
      "service": "[parameters('serviceCode')]",
      "costCenter": "[parameters('costCenter')]",
      "createdBy": "[parameters('createdBy')]",
      "owner": "[parameters('owner')]",
      "ownerEmail": "[parameters('ownerEmail')]",
      "createdDate": "[parameters('createdDate')]",
      "managedBy": "bicep",
      "deployment": "[deployment().name]"
    },
    "acrName": "[replace(format('{0}-{1}-{2}-acr', parameters('projectCode'), variables('envMapping')[parameters('environment')], parameters('serviceCode')), '-', '')]",
    "cosmosDbAccountName": "[replace(format('{0}-{1}-{2}-cosmos', parameters('projectCode'), variables('envMapping')[parameters('environment')], parameters('serviceCode')), '-', '')]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "acr",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "tags": {
            "value": "[variables('standardTags')]"
          },
          "acrName": {
            "value": "[variables('acrName')]"
          },
          "location": {
            "value": "[parameters('resourceLocation')]"
          },
          "sku": {
            "value": "[parameters('acrSku')]"
          },
          "enableAdminUser": {
            "value": "[parameters('acrEnableAdminUser')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "6338266233349140543"
            }
          },
          "parameters": {
            "acrName": {
              "type": "string",
              "metadata": {
                "description": "Azure Container Registry name"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for the ACR"
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "Standard",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "SKU for the ACR"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the ACR"
              }
            },
            "enableAdminUser": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Enable admin user for the ACR"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2025-04-01",
              "name": "[parameters('acrName')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "sku": {
                "name": "[parameters('sku')]"
              },
              "properties": {
                "adminUserEnabled": "[parameters('enableAdminUser')]",
                "dataEndpointEnabled": false,
                "encryption": {
                  "status": "disabled"
                }
              }
            }
          ],
          "outputs": {
            "acrId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName'))]"
            },
            "acrLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('acrName')), '2025-04-01').loginServer]"
            },
            "acrName": {
              "type": "string",
              "value": "[parameters('acrName')]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "deploy-cosmos-db",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "cosmosDbAccountName": {
            "value": "[variables('cosmosDbAccountName')]"
          },
          "location": {
            "value": "[parameters('resourceLocation')]"
          },
          "databaseNames": {
            "value": "[parameters('cosmosDatabaseNames')]"
          },
          "containerName": {
            "value": "[parameters('cosmosContainerName')]"
          },
          "tags": {
            "value": "[variables('standardTags')]"
          },
          "defaultTtl": {
            "value": 86400
          },
          "enableFreeTier": {
            "value": "[parameters('cosmosEnableFreeTier')]"
          },
          "throughput": {
            "value": "[parameters('cosmosThroughput')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "10661269366422836322"
            }
          },
          "parameters": {
            "cosmosDbAccountName": {
              "type": "string",
              "metadata": {
                "description": "Name of the Cosmos DB account"
              }
            },
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location for the Cosmos DB account"
              }
            },
            "databaseNames": {
              "type": "array",
              "defaultValue": [
                "swa-dev",
                "swa-prod",
                "k8s-dev",
                "k8s-prod"
              ],
              "metadata": {
                "description": "The names of the databases to create"
              }
            },
            "containerName": {
              "type": "string",
              "defaultValue": "secret",
              "metadata": {
                "description": "The name of the container to create in each database"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Tags for the Cosmos DB account"
              }
            },
            "defaultTtl": {
              "type": "int",
              "defaultValue": 86400,
              "metadata": {
                "description": "Default TTL for documents in seconds (24 hours = 86400)"
              }
            },
            "enableFreeTier": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Enable free tier (only one per subscription)"
              }
            },
            "throughput": {
              "type": "int",
              "defaultValue": 400,
              "metadata": {
                "description": "Throughput for the container (minimum 400 RU/s)"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2023-04-15",
              "name": "[parameters('cosmosDbAccountName')]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "tags": "[parameters('tags')]",
              "properties": {
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ],
                "databaseAccountOfferType": "Standard",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "enableFreeTier": "[parameters('enableFreeTier')]",
                "backupPolicy": {
                  "type": "Periodic",
                  "periodicModeProperties": {
                    "backupIntervalInMinutes": 240,
                    "backupRetentionIntervalInHours": 8,
                    "backupStorageRedundancy": "Local"
                  }
                }
              }
            },
            {
              "copy": {
                "name": "cosmosDbDatabase",
                "count": "[length(parameters('databaseNames'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), parameters('databaseNames')[copyIndex()])]",
              "properties": {
                "resource": {
                  "id": "[parameters('databaseNames')[copyIndex()]]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
              ]
            },
            {
              "copy": {
                "name": "cosmosDbContainer",
                "count": "[length(parameters('databaseNames'))]"
              },
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
              "apiVersion": "2023-04-15",
              "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('databaseNames')[copyIndex()], parameters('containerName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('containerName')]",
                  "partitionKey": {
                    "paths": [
                      "/link_id"
                    ],
                    "kind": "Hash"
                  },
                  "defaultTtl": "[parameters('defaultTtl')]",
                  "indexingPolicy": {
                    "indexingMode": "consistent",
                    "includedPaths": [
                      {
                        "path": "/*"
                      }
                    ],
                    "excludedPaths": [
                      {
                        "path": "/\"_etag\"/?"
                      }
                    ]
                  }
                },
                "options": {
                  "autoscaleSettings": {
                    "maxThroughput": "[parameters('throughput')]"
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('databaseNames')[copyIndex()])]"
              ]
            }
          ],
          "outputs": {
            "cosmosDbAccountName": {
              "type": "string",
              "value": "[parameters('cosmosDbAccountName')]"
            },
            "cosmosDbAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
            },
            "cosmosDbEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2023-04-15').documentEndpoint]"
            },
            "databaseNames": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('databaseNames'))]",
                "input": "[parameters('databaseNames')[copyIndex()]]"
              }
            },
            "containerName": {
              "type": "string",
              "value": "[parameters('containerName')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "acrName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr'), '2022-09-01').outputs.acrName.value]"
    },
    "acrLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr'), '2022-09-01').outputs.acrLoginServer.value]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-cosmos-db'), '2022-09-01').outputs.cosmosDbEndpoint.value]"
    },
    "cosmosDbAccountName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-cosmos-db'), '2022-09-01').outputs.cosmosDbAccountName.value]"
    },
    "cosmosDatabaseNames": {
      "type": "array",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-cosmos-db'), '2022-09-01').outputs.databaseNames.value]"
    },
    "cosmosContainerName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'deploy-cosmos-db'), '2022-09-01').outputs.containerName.value]"
    }
  }
}